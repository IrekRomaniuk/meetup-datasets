input {
    stdin { 
      codec => plain {
          charset => "Windows-1250"
      }
    }
}
filter {
    csv { 
        columns => ["incident_number", "offense_code", "offense_code_group", "offense_description", "district", "reporting_area", "shooting", "occurred_on_date", "year", "month", "day_week", "hours", "ucrpart", "streetname", "lat", "lon", "location_string"]
    }

    # Drop CSV header line
    if [incident_number] == "INCIDENT_NUMBER" {
        drop { }
    }

    # Specify correct date format
    date {
        match => ["occurred_on_date", "YYYY-MM-dd HH:mm:ss"]
        locale => en
        timezone => "America/New_York"
    }

    # Format location string properly
    grok {
        match => { "location_string" => "\(%{NUMBER:[location][lat]}\, %{NUMBER:[location][lon]}\)" }
        remove_field => ["location_string"]
    }

    # Drop lines with invalid locations
    if [location_string] == "(0E-8, 0E-8)" {
        drop { }
    }
    
    # Remove entire message field
    mutate {
         remove_field => [ "message", "lat", "lon", "location_string", "occurred_on_date" ]
    }    
}
output {
    elasticsearch {
        # user => logstash_system
        # password => changeme
        hosts => ["127.0.0.1:9200"]
        template => "./template.json"
        template_name => "boston-crime-template"
        template_overwrite => true
        index => "boston-crime"
        document_type => doc
        document_id => "%{incident_number}"
    }
}
# Uncomment for debugging
# output {
#     stdout { codec => rubydebug }
# }


